{"version":3,"file":null,"sources":["../src/SegmentDraw.js"],"sourcesContent":["/*\n* Author   Jonathan Lurie - http://me.jonahanlurie.fr\n* License  MIT\n* Link      https://github.com/jonathanlurie/PlaneDrag\n* Lab       MCIN - Montreal Neurological Institute\n*/\n\n\n// the jacky way to get THREE from a browser or npm\nvar TROIS = null;\n\n/**\n* SegmentDraw is a helper to draw a segment on a THREE.Object3D using the mouse pointer.\n* The first and last point are on the surface of the container given in argument to the constructor\n*/\nclass SegmentDraw {\n\n  /**\n  * @param {THREE.Object3D} container - an object that contains 3 orthogonal planes\n  * @param {THREE.Scene} scene - scene to add the segment to\n  * @param {THREE.Camera} camera - camera\n  * @param {Object} options - {mouse: THREE.Vector2, control: THREE.OrbitControl, drawKey: String, ,hideKey: String, segmentThickness: Number, segmentColor: String}.\n  * Default values: drawKey=\"Space\", hideKey=\"Escape\", segmentThickness=6, segmentColor=\"#6600aa\"\n  */\n  constructor( container, scene, camera, options = {}){\n    this._requireThree();\n\n    this._enabled = true;\n\n    // contains the three planes\n    this._container = container;\n\n    // camera we use to cast rays\n    this._camera = camera;\n\n    // the main scene, where to draw the segment\n    this._scene = scene;\n\n    // to restrict the raycasting\n    this._boundingBox = new TROIS.Box3( new TROIS.Vector3(-Infinity, -Infinity, -Infinity), new TROIS.Vector3(Infinity, Infinity, Infinity));\n\n    // orbit control or trackball control\n    this._controls = this._getOption(options, \"controls\", null);\n\n    // the mouse coord can be passed by an extenal pointer\n    this._mouse = this._getOption(options, \"mouse\", new TROIS.Vector2(Infinity, Infinity));\n    this._useReferenceMouse = !!(options.mouse)\n\n    // 3D position (world) of the clicking\n    this._pointClicked3D = null;\n\n    // to cast rays\n    this._raycaster = new TROIS.Raycaster();\n\n    // the keyboard key to hold for drawing\n    this._drawKey = this._getOption(options, \"drawKey\", \"Space\");\n    this._hideKey = this._getOption(options, \"hideKey\", \"Escape\");\n\n    // segment properties\n    this._radius = this._getOption(options, \"radius\", 0.5);\n    this._segmentThickness = this._getOption(options, \"segmentThickness\", 6);\n    this._segmentColor = this._getOption(options, \"segmentColor\", \"#6600aa\");\n\n    this._mouseDown = false;\n\n    this._sampleSegment = {\n      segment: null,\n      started: false\n    }\n\n    this._orbitData = {}\n\n    this._drawModeEnabled = false;\n\n    // all the following are array of events\n    this._customEvents = {\n      startInteraction: [],\n      stopInteraction: [],\n      draw: [],\n    }\n\n    this._initSamplingSegment();\n    this._initEvents();\n  }\n\n\n  /**\n  * [PRIVATE]\n  * Init the segment object with size 0 and invisible\n  */\n  _initSamplingSegment(){\n    var material = new TROIS.LineBasicMaterial({\n      color: this._segmentColor,\n      linewidth: this._segmentThickness,\n      linecap: \"square\"\n    });\n\n\n    var path = new TROIS.LineCurve(\n      new TROIS.Vector3( 0, 0, 0 ),\n      new TROIS.Vector3( 0, 0, 0 )\n    );\n    var params = [path, 10, this._radius, 8, false];\n    var geometry = new TROIS.TubeBufferGeometry(...params);\n    this._sampleSegment = {\n      params: params,\n      segment: new TROIS.Mesh( geometry, material ),\n      started: false\n    };\n\n    this._sampleSegment.segment.name = \"sampling_segment\";\n    this._sampleSegment.segment.visible = false;\n    this._scene.add( this._sampleSegment.segment );\n  }\n\n\n  /**\n  * [PRIVATE]\n  * Hacky way to make sure THREE is around, from with a browser or a npm package\n  */\n  _requireThree(){\n    try {\n      TROIS = (window && window.THREE) || require('three');\n    } catch(e) {\n      // here, window.THREE does not exist (or not yet)\n\n      // trying to require\n      try {\n        TROIS = require(\"three\");\n      } catch (e) {\n        // here, require is not possible (we are certainly in a browser)\n        console.error( e );\n      }\n    }\n  }\n\n\n  /**\n  * [PRIVATE]\n  * get a value from the option argument in the constructor\n  */\n  _getOption(optionsObject, key, defaultValue){\n    if(!optionsObject)\n      return defaultValue;\n\n    return optionsObject[ key ] || defaultValue;\n  }\n\n\n  /**\n  * [PRIVATE]\n  * Initialize all the mouse/keyboard events\n  */\n  _initEvents(){\n    window.addEventListener( 'mousemove', this._onMouseMove.bind(this), false );\n    window.addEventListener( 'mousedown', this._onMouseDown.bind(this), false );\n    window.addEventListener( 'mouseup', this._onMouseUp.bind(this), false );\n    window.addEventListener( 'keyup', this._onKeyUp.bind(this), false );\n    window.addEventListener( 'keydown', this._onKeyDown.bind(this), false );\n  }\n\n\n  /**\n  * [PRIVATE - EVENT]\n  * when mouse is moving, refreshes the internal normalized mouse position\n  */\n  _onMouseMove( evt ){\n    if( !this._enabled )\n      return;\n\n    // do not recompute the unit mouse coord if we use an external mouse reference\n    if(!this._useReferenceMouse){\n      this._mouse.x = ( event.clientX / window.innerWidth ) * 2 - 1;\n      this._mouse.y = - ( event.clientY / window.innerHeight ) * 2 + 1;\n    }\n\n    if( this._sampleSegment.started ){\n      this._continueSegment( this._raycast() );\n    }\n  }\n\n\n  /**\n  * [PRIVATE - EVENT]\n  * when mouse is clicked, cast a ray if the right keyboard key is maintained pushed\n  */\n  _onMouseDown( evt ){\n    if( !this._enabled )\n      return;\n\n    this._mouseDown = true;\n\n    if( this._drawModeEnabled ){\n      this._startSegment( this._raycast() );\n    }\n  }\n\n  /**\n  * [PRIVATE]\n  * generate the tube geometry of the line segment.\n  */\n  _makeTubeGeometry() {\n    this._sampleSegment.segment.geometry =\n      new TROIS.TubeBufferGeometry(...this._sampleSegment.params);\n  }\n  \n  /**\n  * [PRIVATE]\n  * Start the segment drawing with a given point\n  * @param {THREE.Vector3} point - most likely given by a raycaster\n  */\n  _startSegment( point ){\n    if( !point )\n      return\n\n    var DELTA = new TROIS.Vector3(0.01, 0.01, 0.01);\n    this._sampleSegment.started = true;\n    this._sampleSegment.params[0].v1.copy( point )\n    this._sampleSegment.params[0].v2.addVectors(point, DELTA);\n    this._makeTubeGeometry();\n    this._sampleSegment.segment.visible = true;\n  }\n\n  /**\n  * Edit the last point of the segment\n  * @param {THREE.Vector3} point - most likely given by a raycaster\n  */\n  _continueSegment( point ){\n    if( !point )\n      return;\n    this._sampleSegment.params[0].v2.copy( point );\n    this._makeTubeGeometry();\n    this._triggerEvents( \"draw\", [\n      this._sampleSegment.params[0].v1.clone(),\n      this._sampleSegment.params[0].v2.clone()\n    ]);\n  }\n\n  /**\n   * Draw a line segment between two given points.\n   * @param  {THREE.Vector3} start\n   * @param  {THREE.Vector3} end\n   */\n  drawSegment(begin, end) {\n    this._sampleSegment.params[0].v1.copy( begin );\n    this._sampleSegment.params[0].v2.copy( end );\n    this._makeTubeGeometry();\n    this._sampleSegment.segment.visible = true;\n    this._triggerEvents( \"draw\", [\n      this._sampleSegment.params[0].v1.clone(),\n      this._sampleSegment.params[0].v2.clone()\n    ]);\n  }\n  /**\n  * [PRIVATE - EVENT]\n  * when mouse is releasing\n  */\n  _onMouseUp( evt ){\n    if( !this._enabled )\n      return;\n\n    this._mouseDown = false;\n    this._sampleSegment.started = false;\n  }\n\n\n  /**\n  * [PRIVATE - EVENT]\n  * when a key from the keyboard is pressed. Refreshes the current state\n  */\n  _onKeyUp( evt ){\n    if( !this._enabled )\n      return;\n\n    switch (evt.code) {\n      case this._drawKey:\n        this._drawModeEnabled = false;\n        this._sampleSegment.started = false;\n        this._enableControl();\n        this._triggerEvents( \"stopInteraction\" );\n        break;\n\n      case this._hideKey:\n        this.hide();\n        break;\n\n      default:\n    }\n  }\n\n\n  /**\n  * [PRIVATE - EVENT]\n  * when a key from the keyboard is released. Refreshes the current state\n  */\n  _onKeyDown( evt ){\n    if( !this._enabled )\n      return;\n\n    if( evt.code === this._drawKey && !this._drawModeEnabled){\n      this._drawModeEnabled = true;\n      this._disableControl();\n      this._triggerEvents( \"startInteraction\" )\n    }\n  }\n\n\n  /**\n  * Define a boundingbox to restrict the raycasting and the shift\n  * @param {TROIS.Box3} b - bounding box\n  */\n  setBoundingBox( b ){\n    this._boundingBox = b.clone();\n  }\n\n\n  /**\n  * Hide the segment (does NOT remove it)\n  */\n  hide(){\n    this._sampleSegment.segment.visible = false;\n  }\n\n\n  /**\n  * [PRIVATE]\n  * Performs a raycasting on the children of the plane container, then based on the\n  * active state, take a decision of what to do.\n  */\n  _raycast(){\n    this._raycaster.setFromCamera( this._mouse, this._camera );\n    var intersects = this._raycaster.intersectObject( this._container, true );\n\n    for(var i=0; i<intersects.length; i++){\n      if( this._boundingBox.containsPoint( intersects[i].point) ){\n        return intersects[i].point;\n      }\n    }\n\n    return null;\n  }\n\n\n  /**\n  * [PRIVATE]\n  * Disable the orbit/trackball control\n  */\n  _disableControl(){\n    if(!this._controls)\n      return;\n\n    if(this._controls.enabled){\n      this._saveOrbitData();\n    }\n\n    this._controls.enabled = false;\n  }\n\n\n  /**\n  * [PRIVATE]\n  * enable the orbit/trackball control\n  */\n  _enableControl(){\n    if(!this._controls)\n      return;\n\n    // if already enables\n    if( this._controls.enabled )\n      return;\n\n    this._controls.enabled = true;\n    this._restoreOrbitData()\n  }\n\n\n  /**\n  * [PRIVATE]\n  * Helper method to call before disabling the controls\n  */\n  _saveOrbitData(){\n    this._orbitData = {\n      target: new TROIS.Vector3(),\n      position: new TROIS.Vector3(),\n      zoom: this._controls.object.zoom\n    }\n\n    this._orbitData.target.copy(this._controls.target);\n    this._orbitData.position.copy(this._controls.object.position);\n  }\n\n\n  /**\n  * [PRIVATE]\n  * Helper method to call before re-enabling the controls\n  */\n  _restoreOrbitData(){\n    this._controls.position0.copy(this._orbitData.position);\n    this._controls.target0.copy(this._orbitData.target);\n    this._controls.zoom0 = this._orbitData.zoom;\n    this._controls.reset();\n  }\n\n\n  /**\n  * Enable or disable the SegmentDraw instance\n  * @param {Boolean} bool - true: enable, false: disable\n  */\n  enable( bool ){\n    this._enabled = bool;\n  }\n\n\n  /**\n  * specify an event\n  */\n  on( eventName, callback ){\n    if(typeof(callback) === 'function'){\n      if( eventName in this._customEvents ){\n        this._customEvents[ eventName ].push( callback );\n      }\n    }\n  }\n\n\n  /**\n  * Call a registered event\n  * @param {String} eventName - name of the event\n  * @param {Array} args - array of argument to be transmited to the callback\n  */\n  _triggerEvents( eventName, args=null ){\n    if( eventName in this._customEvents ){\n      var events = this._customEvents[eventName];\n\n      for(var i=0; i<events.length; i++){\n        events[i].apply(null, args)\n      }\n    }\n  }\n\n} /* END of class SegmentDraw */\n\nexport { SegmentDraw }\n"],"names":[],"mappings":"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"}